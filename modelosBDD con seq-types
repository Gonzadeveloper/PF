import { Table, Column, Model, DataType, HasOne, HasMany, BelongsTo, ForeignKey } from 'sequelize-typescript';
import { Sequelize } from 'sequelize-typescript';

@Table({ modelName: 'User' })
export class User extends Model<User> {
  @Column({ allowNull: false })
  name!: string;

  @Column({ allowNull: false, unique: true })
  email!: string;

  @Column({ allowNull: false })
  password!: string;

  @Column({ allowNull: false })
  role!: string;

  @HasOne(() => Cart)
  cart?: Cart;

  @HasMany(() => Order)
  orders?: Order[];

  @HasMany(() => Address)
  addresses?: Address[];

  @HasMany(() => Review)
  reviews?: Review[];

  @HasMany(() => Product, { foreignKey: 'userId', as: 'productsAsSeller' })
  productsAsSeller?: Product[];

  @HasMany(() => Product, { foreignKey: 'userId', as: 'productsAsBuyer' })
  productsAsBuyer?: Product[];

  @HasOne(() => Reputation)
  reputation?: Reputation;
}

@Table({ modelName: 'Reputation' })
export class Reputation extends Model<Reputation> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  userId!: number;

  @Column({ allowNull: false })
  score!: number;

  @Column ({ allowNull: false })
  comments!: string;

  @BelongsTo(() => User)
  user?: User;
}

@Table({ modelName: 'Product' })
export class Product extends Model<Product> {
  @Column({ allowNull: false })
  categoryId!: number;

  @Column({ allowNull: false })
  userId!: number;

  @Column({ allowNull: false })
  name!: string;

  @Column ({ allowNull: false })
  description!: string;

  @Column({ allowNull: false })
  price!: number;

  @Column({ allowNull: false })
  stockQuantity!: number;

  @Column ({ allowNull: false })
  condition!: string;

  @BelongsTo(() => Category)
  category?: Category;

  @BelongsTo(() => User)
  user?: User;

  @HasMany(() => Review)
  reviews?: Review[];
}

@Table({ modelName: 'Category' })
export class Category extends Model<Category> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  name!: string;

  @HasMany(() => Product)
  products?: Product[];
}

@Table({ modelName: 'Review' })
export class Review extends Model<Review> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  productId!: number;

  @Column({ allowNull: false })
  userId!: number;

  @Column({ allowNull: false })
  rating!: number;

  @Column ({ allowNull: false })
  comment!: string;

  @BelongsTo(() => Product)
  product?: Product;

  @BelongsTo(() => User)
  user?: User;
}

@Table({ modelName: 'Cart' })
export class Cart extends Model<Cart> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  userId!: number;

  @BelongsTo(() => User)
  user?: User;

  // Define asociaciones adicionales si es necesario
}

@Table({ modelName: 'Order' })
export class Order extends Model<Order> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  userId!: number;

  @Column({ allowNull: false, type: DataType.DATE })
  orderDate!: Date;

  @Column({ allowNull: false })
  orderStatus!: string;

  @BelongsTo(() => User)
  user?: User;

  @HasMany(() => Product)
  products?: Product[];

  @HasOne(() => Payment)
  payment?: Payment;

  @HasOne(() => Dispute)
  dispute?: Dispute;
}

@Table({ modelName: 'Address' })
export class Address extends Model<Address> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  userId!: number;

  @Column({ allowNull: false })
  address!: string;

  @BelongsTo(() => User)
  user?: User;
}

@Table({ modelName: 'Payment' })
export class Payment extends Model<Payment> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  orderId!: number;

  @Column({ allowNull: false, type: DataType.DATE })
  paymentDate!: Date;

  @Column({ allowNull: false })
  amount!: number;

  @Column({ allowNull: false })
  paymentMethod!: string;

  @BelongsTo(() => Order)
  order?: Order;

  // Define asociaciones adicionales si es necesario
}

@Table({ modelName: 'Dispute' })
export class Dispute extends Model<Dispute> {
  @Column({ primaryKey: true, autoIncrement: true })
  id!: number;

  @Column({ allowNull: false })
  orderId!: number;

  @Column({ allowNull: false })
  userId!: number;

  @Column({ allowNull: false })
  description!: string;

  @Column({ allowNull: false })
  disputeStatus!: string;

  @BelongsTo(() => Order)
  order?: Order;

  @BelongsTo(() => User)
  user?: User;

  // Define asociaciones adicionales si es necesario
}

// // Exporta todos los modelos para poder utilizarlos en otros archivos
// export {
//   User,
//   Product,
//   Category,
//   Review,
//   Cart,
//   Order,
//   Address,
//   Payment,
//   Dispute,
//   Reputation,
// };
